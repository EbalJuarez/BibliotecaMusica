@page "/weather"
@inject HttpClient Http
@using BibliotecaMusica.Clases
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

<PageTitle>Albumes</PageTitle>

<h1>Canciones: </h1>

<p>Seleccione un artista: </p>

<div>
    <InputSelect @bind-Value="artista_seleccionado">
        <option value="">Seleccione un artista: </option>
        @foreach (var word in Listado_albumes)
        {
            <option value="@word.Artista">@word.Artista</option>
        }
    </InputSelect>
</div>


@if (!string.IsNullOrEmpty(artista_seleccionado))
{
    <h4>Valores para "@artista_seleccionado":</h4>

    @if (Listado_albumes == null || !Listado_albumes.Any())
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        var albumsFiltrados = Listado_albumes.Where(a => a.Artista == artista_seleccionado).ToList();

        @if (!albumsFiltrados.Any())
        {
            <p>No se encontraron álbumes para el artista "@artista_seleccionado".</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Nombre del álbum</th>
                        <th>Fecha de publicación</th>
                        <th>Listado de canciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var album in albumsFiltrados)
                    {
                        <tr>
                            <td>@album.Titulo</td>
                            <td>@album.Fecha_Publicacion</td>
                            <td>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Nombre de la canción</th>
                                            <th>Duración</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (Cancion cancion in album.Listado_Canciones)
                                        {
                                            <tr>
                                                <td>@cancion.Nombre_Cancion</td>
                                                <td>@cancion.Duracion</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        }
    }
}

@code {
    private string? artista_seleccionado;
    private List<Album> Listado_albumes = new List<Album>();


    protected override async Task OnInitializedAsync()
    {
        var savedStarships = localStorage.GetItem<List<Album>>("starships");

        if (savedStarships != null)
        {
            Listado_albumes = savedStarships;
        }
    }
}
